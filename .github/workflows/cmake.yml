name: C++ CI

on:
  push:
    branches: [test/sfml] # replace with main (if applicable)
    tags: '*'
  pull_request:
    branches: [master] # replace with main (if applicable)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE: Release
      SFML_VERSION: "2021-11-18"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        cxx: [g++, clang++]
        sfml_config: [-DSFML_STATIC_LIBRARIES=TRUE]
        include:
          - os: macos-10.15
            cxx: clang++
            sfml_config: -DSFML_STATIC_LIBRARIES=TRUE -DCMAKE_FIND_FRAMEWORK=NEVER
          - os: windows-2019
            cxx: cl
            sfml_config: -DSFML_STATIC_LIBRARIES=FALSE
          - os: windows-2019
            cxx: g++
            sfml_config: -DSFML_STATIC_LIBRARIES=FALSE
            cmake_generator: "\"MinGW Makefiles\""

    steps:
      - uses: actions/checkout@v2

      - name: Prepare env
        shell: bash
        run: |
          echo $GITHUB_WORKSPACE
          mkdir $GITHUB_WORKSPACE/build
          mkdir $GITHUB_WORKSPACE/libs
          mkdir $GITHUB_WORKSPACE/artifacts

      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

      - uses: robinraju/release-downloader@v1.3
        with:
          repository: "mcmarius/demo-poo"
          tag: "sfml-${{ env.SFML_VERSION }}-v0.0.1.0"
          fileName: "release_sfml-${{ env.SFML_VERSION }}-v0.0.1.0_${{ matrix.os }}_${{ matrix.cxx }}.zip"

      - name: Prepare dependencies
        shell: bash
        run: |
          7z x -olibs/sfml release_sfml-$SFML_VERSION-v0.0.1.0_${{ matrix.os }}_${{ matrix.cxx }}.zip

      - name: Configure CMake
        env:
          CXX: ${{ matrix.cxx }}
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        # https://github.com/saxbophone/CPP20-Cross-Platform-Template
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          CMAKE_GENERATOR=${{ matrix.cmake_generator }} cmake -S $GITHUB_WORKSPACE -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/artifacts -DCMAKE_PREFIX_PATH=libs/sfml/artifacts -DSFML_DIR=libs/sfml/artifacts ${{ matrix.sfml_config }}

      - name: Build
        working-directory: ${{ github.workspace }}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE -j6

      - name: Install
        # working-directory: ${{ github.workspace }}/build
        shell: bash
        # Use CMake to "install" build artifacts (only interested in CMake registered targets) to our custom artifacts directory
        run: cmake --install build --config $BUILD_TYPE --prefix artifacts

      - name: Set Tag Name
        shell: bash
        # trim prefix from ref to get tag name
        run: echo "TAG_NAME=${GITHUB_REF#'refs/tags/'}" >> $GITHUB_ENV

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          type: 'zip'
          path: artifacts
          filename: release_${{ env.TAG_NAME }}_${{ matrix.os }}_${{ matrix.cxx }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release_${{ env.TAG_NAME }}_${{ matrix.os }}_${{ matrix.cxx }}.zip
